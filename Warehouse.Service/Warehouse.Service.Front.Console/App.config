<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>

  <connectionStrings>
    <add providerName="MsSql" name="dbConnectionString" connectionString="Data Source=DIMA; Initial Catalog=Warehouse;Integrated Security=True" />
  </connectionStrings>
  
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
    </startup>

  <appSettings>
    <add key="ServiceUrl" value="http://localhost:8080/" />
  </appSettings>

  <!--unity configuration-->
  
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <alias alias="IRepository" type="Warehouse.DAL.Contract.IRepository`1, Warehouse.DAL.Contract" />
    
    <alias alias="DeliveryRepository" type="Warehouse.DAL.SqlServer.DeliveryRepository, Warehouse.DAL.SqlServer" />
    <alias alias="GoodsCategoryRepository" type="Warehouse.DAL.SqlServer.GoodsCategoryRepository, Warehouse.DAL.SqlServer" />
    <alias alias="GoodsClassRepository" type="Warehouse.DAL.SqlServer.GoodsClassRepository, Warehouse.DAL.SqlServer" />
    <alias alias="GoodsOfDeliveryRepository" type="Warehouse.DAL.SqlServer.GoodsOfDeliveryRepository, Warehouse.DAL.SqlServer" />
    <alias alias="GoodsRepository" type="Warehouse.DAL.SqlServer.GoodsRepository, Warehouse.DAL.SqlServer" />
    <alias alias="ProviderRepository" type="Warehouse.DAL.SqlServer.ProviderRepository, Warehouse.DAL.SqlServer" />
    <alias alias="SaleRepository" type="Warehouse.DAL.SqlServer.SaleRepository, Warehouse.DAL.SqlServer" />
    <alias alias="StateRepository" type="Warehouse.DAL.SqlServer.StateRepository, Warehouse.DAL.SqlServer" />
    <alias alias="UserRepository" type="Warehouse.DAL.SqlServer.UserRepository, Warehouse.DAL.SqlServer" />
    <alias alias="WarehouseRepository" type="Warehouse.DAL.SqlServer.WarehouseRepository, Warehouse.DAL.SqlServer" />

    <alias alias="IManager" type="Warehouse.BLL.Contract.IManager, Warehouse.BLL.Contract" />
    <alias alias="Manager" type="Warehouse.BLL.Manager, Warehouse.BLL" />

    <alias alias="IValidator" type="Warehouse.BLL.Validator.Contract.IValidator`1, Warehouse.BLL.Validator.Contract" />
    <alias alias="ProviderValidator" type="Warehouse.BLL.Validator.ProviderValidator, Warehouse.BLL.Validator" />
    <alias alias="UserLoginValidator" type="Warehouse.BLL.Validator.UserLoginValidator, Warehouse.BLL.Validator" />
    <alias alias="UserRegistrationValidator" type="Warehouse.BLL.Validator.UserRegistrationValidator, Warehouse.BLL.Validator" />

    <alias alias="IController" type="Warehouse.Service.Contract.IController, Warehouse.Service.Contract" />
    <alias alias="ServiceController" type="Warehouse.Service.ServiceController, Warehouse.Service" />

    <container>
      <register type="IRepository" name="Delivery" mapTo="DeliveryRepository"/>
      <register type="IRepository" name="GoodsCategory" mapTo="GoodsCategoryRepository"/>
      <register type="IRepository" name="GoodsClass" mapTo="GoodsClassRepository"/>
      <register type="IRepository" name="GoodsOfDelivery" mapTo="GoodsOfDeliveryRepository"/>
      <register type="IRepository" name="Goods" mapTo="GoodsRepository"/>
      <register type="IRepository" name="Provider" mapTo="ProviderRepository"/>
      <register type="IRepository" name="Sale" mapTo="SaleRepository"/>
      <register type="IRepository" name="State" mapTo="StateRepository"/>
      <register type="IRepository" name="User" mapTo="UserRepository"/>
      <register type="IRepository" name="Warehouse" mapTo="WarehouseRepository"/>

      <register type="IManager" mapTo="Manager"/>

      <register type="IValidator" name="Provider" mapTo="ProviderValidator"/>
      <register type="IValidator" name="UserLogin" mapTo="UserLoginValidator"/>
      <register type="IValidator" name="UserRegistration" mapTo="UserRegistrationValidator"/>

      <register type="IController" mapTo="ServiceController"/>

    </container>

  </unity>

  <!--end unity configuration-->
  

  <!--log4net configuration-->
  <log4net>
    <root>
      <level value="ALL" />
      <appender-ref ref="MyAppender" />
      <appender-ref ref="RollingFileAppender" />
    </root>
    <appender name="MyAppender" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="MyFileAppender" type="log4net.Appender.FileAppender">
      <file value="application.log" />
      <appendToFile value="true" />
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date %level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="Warehouse.Service.xml" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="5" />
      <maximumFileSize value="20MB" />
      <staticLogFileName value="true" />
      <layout type="log4net.Layout.XmlLayout" />
    </appender>
  </log4net>
  <!--end log4net configuration-->
  
</configuration>
